---

- name: SAP HANA deploy
  hosts: 127.0.0.1
  connection: local
  tasks:
  - name: Deploy SAP HANA infrastructure
    terraform:
      backend_config:
        bucket: '{{ sap_hana_state_bucket }}'
        prefix: '{{ sap_hana_state_bucket_prefix | default(sap_hana_instance_name) }}'
      project_path: ./tf
      force_init: true
      state: present
      variables:
        instance_name: '{{ sap_hana_instance_name }}'
        linux_image_family: '{{ sap_hana_source_image_family }}'
        linux_image_project: '{{ sap_hana_source_image_project }}'
        region: '{{ sap_hana_region }}'
        zone: '{{ sap_hana_zone }}'
        subnetwork: '{{ sap_hana_subnetwork }}'
        boot_disk_size: '{{ sap_hana_boot_disk_size }}'
        sap_install_files_bucket: '{{ sap_install_files_bucket }}'
        sap_hostagent_file_name: '{{ sap_hostagent_file_name }}'
        sap_hana_bundle_file_name: '{{ sap_hana_bundle_file_name }}'
        sap_hana_sapcar_file_name: '{{ sap_hana_sapcar_file_name }}'
        gce_ssh_user: '{{ sap_hana_gce_ssh_user }}'
        gce_ssh_pub_key_file: '{{ playbook_dir }}/ssh-key.pub'
        gce_ssh_priv_key_file: '{{ playbook_dir }}/ssh-key'
        run_provisioner: 'false'
    register: terraform
  - name: Copy ssh public key
    copy:
      dest: '{{ playbook_dir }}/ssh-key.pub'
      src: '{{ sap_hana_gce_ssh_pub_key }}'
  - name: Copy ssh private key
    copy:
      dest: '{{ playbook_dir }}/ssh-key'
      src: '{{ sap_hana_gce_ssh_priv_key }}'
      mode: '0600'
  - name: Build inventory
    add_host:
      name: '{{ terraform.outputs.address.value }}'
      ansible_user: '{{ sap_hana_gce_ssh_user }}'
      ansible_ssh_private_key_file: '{{ playbook_dir }}/ssh-key'
      terraform: '{{ terraform }}'
      groups: hana
    changed_when: false
  - name: Wait for host
    shell: |-
      ssh -i {{ playbook_dir }}/ssh-key \
        -o StrictHostKeyChecking=no \
        {{ sap_hana_gce_ssh_user }}@{{ terraform.outputs.address.value }} \
        exit
    register: can_ssh
    retries: 12
    delay: 10
    until: can_ssh is succeeded

- name: SAP HANA configure
  hosts: hana
  become: yes
  vars:
    sap_image_family: '{{ terraform.outputs.sap_image_family.value }}'
    sap_hostagent_file_name: '{{ terraform.outputs.sap_hostagent_file_name.value }}'
    sap_hana_bundle_file_name: '{{ terraform.outputs.sap_hana_bundle_file_name.value }}'
    sap_hana_sapcar_file_name: '{{ terraform.outputs.sap_hana_sapcar_file_name.value }}'
    sap_hostagent_rpm_file_name: '{{ terraform.outputs.sap_hostagent_file_name.value }}'
    sap_hana_deployment_bundle_sar_file_name: '{{ terraform.outputs.sap_hana_bundle_file_name.value }}'
    sap_hana_deployment_sapcar_file_name: '{{ terraform.outputs.sap_hana_sapcar_file_name.value }}'
    hana_shared_size: '{{ terraform.outputs.hana_shared_size.value }}G'
    hana_data_size: '{{ terraform.outputs.hana_data_size.value }}G'
    hana_log_size: '{{ terraform.outputs.hana_log_size.value }}G'
    hana_usr_size: '{{ terraform.outputs.hana_usr_size.value }}G'
    hana_backup_size: '{{ terraform.outputs.hana_backup_size.value - 1 }}G'
    swapon: false
    disks:
      - { name: '{{ terraform.outputs.instance_attached_disks_data.value }}', partition_path : 'hanadata'}
      - { name: '{{ terraform.outputs.instance_attached_disks_backup.value }}', partition_path : 'hanabackup'}
    logvols:
      shared:
        size: "{{ hana_shared_size }}"
        vol: hanadata 
        mountpoint: /hana/shared
        fstype: xfs
      data:
        size: "{{ hana_data_size }}"
        vol: hanadata
        mountpoint: /hana/data
        fstype: xfs
      log:
        size: "{{ hana_log_size }}"
        vol: hanadata
        mountpoint: /hana/log
        fstype: xfs
      usr:
        size: "{{ hana_usr_size }}"
        vol: hanadata
        mountpoint: /usr/sap
        fstype: xfs
      backup:
        size: "{{ hana_backup_size}}"
        vol: hanabackup
        mountpoint: /hanabackup
        fstype: xfs
  roles:
  - role: sap-hana-scaleup
