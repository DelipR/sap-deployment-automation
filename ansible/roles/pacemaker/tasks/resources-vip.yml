---
- block:
  - name: create healthcheck service
    command:
      pcs resource create rsc_healthcheck-primary service:haproxy
    when: sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: crm_command_status.rc != 0 and 'already exists' not in crm_command_status.stderr

  - name: create gcp-vpc-move-vip resource
    command: >-
      pcs resource create rsc_vip_gcp-primary gcp-vpc-move-vip
      alias_ip={{ sap_vip }}/32 hostlist="{{ sap_primary_instance }} {{ sap_secondary_instance }}"
    when: not sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: crm_command_status.rc != 0 and 'already exists' not in crm_command_status.stderr

  - name: create ipaddr2 resource
    command: >-
      pcs resource create rsc_vip_int-primary IPaddr2 nic=eth0 ip={{ sap_vip }} cidr_netmask=32
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: crm_command_status.rc != 0 and 'already exists' not in crm_command_status.stderr

  - name: group vip resources
    command: >-
      pcs resource group add g-primary rsc_vip_int-primary rsc_vip_gcp-primary
    when: not sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: crm_command_status.rc != 0 and 'already exists' not in crm_command_status.stderr

  - name: group vip resources
    command: >-
      pcs resource group add g-primary rsc_vip_int-primary rsc_healthcheck-primary
    when: sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: crm_command_status.rc != 0 and 'already exists' not in crm_command_status.stderr
  when:
    ansible_os_family == 'RedHat'

- block:
  - name: create healthcheck service
    command: >-
      crm configure primitive rsc_healthcheck-primary anything
      params binfile=/usr/bin/socat
      cmdline_options="-U TCP-LISTEN:{{ sap_healthcheck_port }},backlog=10,fork,reuseaddr /dev/null"
      op monitor timeout=20s interval=10
      op_params depth=0
    when: sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      'Found existing primitive with same ID' not in crm_command_status.stderr and crm_command_status.rc != 0

  - name: create gcp alias resource
    command: >-
      crm configure primitive rsc_vip_gcp-primary ocf:gcp:alias
      op monitor interval=60s timeout=60s
      op start interval=0 timeout=180s
      op stop interval=0 timeout=180s params
      alias_ip={{ sap_vip }}/32 hostlist="{{ sap_primary_instance }} {{ sap_secondary_instance }}"
      gcloud_path={{ sap_gcloud_path }} logging=yes meta priority=10
    when: not sap_use_lb
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      'Found existing primitive with same ID' not in crm_command_status.stderr and crm_command_status.rc != 0

  - name: create ipaddr2 resource
    command: >-
      crm configure primitive rsc_vip_int-primary IPaddr2
      params ip={{ sap_vip }} cidr_netmask=32 nic="eth0"
      op monitor interval=10s
      meta failure-timeout=3600
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      'Found existing primitive with same ID' not in crm_command_status.stderr and crm_command_status.rc != 0

  - name: group vip resources
    command: >-
      crm configure group g-primary rsc_vip_int-primary rsc_vip_gcp-primary
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      'Found existing group with same ID' not in crm_command_status.stderr and crm_command_status.rc != 0
    when: not sap_use_lb

  - name: group vip resources
    command: >-
      crm configure group g-primary rsc_vip_int-primary rsc_healthcheck-primary
    register: crm_command_status
    changed_when: crm_command_status.rc == 0
    failed_when: |
      'Found existing group with same ID' not in crm_command_status.stderr and crm_command_status.rc != 0
    when: sap_use_lb
  when:
    ansible_os_family == 'Suse'
