---
- name: wait for cluster to be up
  command: crm_mon -s
  register: cluster_status
  retries: 30
  delay: 10
  until: |
    '2 nodes online' in cluster_status.stdout
  changed_when: false

- name: set pcs cluster authentication
  command: >-
    pcs cluster auth {{ sap_primary_instance }} {{ sap_secondary_instance }}
    -u {{ sap_cluster_user }} -p {{ sap_cluster_user_password }}
  no_log: true

- name: check maintenance mode
  command: pcs property show maintenance-mode
  register: maintenance_mode_status
  changed_when: false

- name: enable maintenance mode
  command: pcs property set maintenance-mode=true
  when: |
    'maintenance-mode: false' in maintenance_mode_status.stdout

- name: check stonith for primary
  command: |
    pcs stonith show stonith_{{ sap_primary_instance }}
  register: stonith_primary_status
  failed_when: false

- name: configure stonith for primary
  command: >-
    pcs stonith create stonith_{{ sap_primary_instance }} fence_gce zone={{ sap_primary_zone }}
    pcmk_host_map="{{ sap_primary_instance }}:{{ sap_primary_instance }}" power_timeout=240
    pcmk_reboot_timeout=480s pcmk_reboot_retries=4
  when: stonith_primary_status.rc != 0

- name: check stonith for secondary
  command: |
    pcs stonith show stonith_{{ sap_secondary_instance }}
  register: stonith_secondary_status
  failed_when: false

- name: configure stonith for secondary
  command: >-
    pcs stonith create stonith_{{ sap_secondary_instance }} fence_gce zone={{ sap_secondary_zone }}
    pcmk_host_map="{{ sap_secondary_instance }}:{{ sap_secondary_instance }}" power_timeout=240
    pcmk_reboot_timeout=480s pcmk_reboot_retries=4
  when: stonith_primary_status.rc != 0

- name: set startup-fencing property
  command: pcs property set startup-fencing="true"

- name: set stonith-enabled property
  command: pcs property set stonith-enabled="true"

- name: set resource defaults
  command: |
    pcs resource defaults {{ item }}
  loop:
  - default-resource-stickness=1000
  - default-migration-threshold=5000

# TODO: include application-specific tasks based on sap_application variable (e.g. hana, netweaver).
# - include_tasks: 'resource-{{ sap_application }}-{{ ansible_os_family | lower }}.yml'

- name: check maintenance mode
  command: pcs property show maintenance-mode
  register: maintenance_mode_status
  changed_when: false

- name: disable maintenance mode
  command: pcs property set maintenance-mode=false
  when: |
    'maintenance-mode: true' in maintenance_mode_status.stdout
