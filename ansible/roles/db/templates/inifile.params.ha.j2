########################################################################################################################################################################################

# Installation service ABAP DB Instance with HANA DB (distributed)

########################################################################################################################################################################################

# Start of User Input parameters

# Database host
NW_HDB_getDBInfo.dbhost = {{ sap_hana_instance_name }}

# Database system ID
NW_HDB_getDBInfo.dbsid = {{ sap_hana_sid }} 

# The instance number of the SAP HANA database server
NW_HDB_getDBInfo.instanceNumber = {{ sap_hana_instance_number }} 

# The password of the database schema.
HDB_Schema_Check_Dialogs.schemaPassword = {{ sap_nw_password }}

# Number of parallel Migration Monitor jobs
NW_ABAP_Import_Dialog.migmonJobNum = 24 

# Master password
NW_GetMasterPassword.masterPwd = {{ sap_nw_password }}

NW_System.installSAPHostAgent = false

# Password of user 'SYSTEM' within the 'SystemDB' tenant in an SAP HANA MultiDB server
NW_HDB_getDBInfo.systemDbPassword = {{ sap_hana_password }}

# Password of user 'SYSTEM' inside the SAP HANA database server
NW_HDB_getDBInfo.systemPassword = {{ sap_hana_password }}

# The FQDN of the system
NW_getFQDN.FQDN = c.albatross-duncanl-sandbox-2.internal  

# Provide  'profile' directory of SAP Netweaver-based system.
NW_readProfileDir.profileDir = /sapmnt/{{ sap_nw_sid }}/profile

archives.downloadBasket = {{ sap_nw_archives_downloadbasket }}  

SAPINST.CD.PACKAGE.KERNEL = {{ sap_nw_sapinst_package_kernel }}  

SAPINST.CD.PACKAGE.LOAD = {{ sap_nw_sapinst_package_load }}  

SAPINST.CD.PACKAGE.RDBMS = {{ sap_nw_sapinst_package_client }}  

# End of user Input Parameters
####################################


# Specify whether Software Provisioning Manager is to drop the schema if it exists.
HDB_Schema_Check_Dialogs.dropSchema = true

# The name of the database schema. changed this parameter per SAP note: 2482103 
#HDB_Schema_Check_Dialogs.schemaName = SAPABAP1
NW_HDB_DB.abapSchemaName = SAPABAP1

# Specify whether Software Provisioning Manager is to validate the schema name. The schema name must only contain numbers and capital letters. It  must not start with '_' . It cannot be 'SYS' or 'SYSTEM'.
# HDB_Schema_Check_Dialogs.validateSchemaName = true

# Database hostnames that will be set directly in hdbuserstore without resolving them in HANA. Comma separated. Example (host1,host2)
# HDB_Userstore.doNotResolveHostnames = 

# Specify whether you want to decluster during the import.
# InitDeclusteringForImport.decluster = 

# SAP code page. Value for Unicode is: '4103' on little endian (intel), '4102' on big endian. Value for Non-Unicode is: '1100' or country specific.
NW_ABAP_Import_Dialog.dbCodepage = 4103

# ABAP schema name
# NW_HDB_DB.abapSchemaName = 

# Password of the ABAP schema user
# NW_HDB_DB.abapSchemaPassword = 

# Install the SAP HANA database client in a central or local directory. Possible values are: 'SAPCPE', 'LOCAL'
NW_HDB_DBClient.clientPathStrategy = SAPCPE

# Create the tenant
# NW_HDB_getDBInfo.createTenant = false

# Name of the 'SystemDB' tenant in an SAP HANA MultiDB Server. Default value is 'SystemDB'.
# NW_HDB_getDBInfo.systemDbSid = 

# Password of user 'SYSTEM' inside the SAP HANA database server from a backup
# NW_HDB_getDBInfo.systemPasswordBackup = 

# A dedicated OS group for the tenant database, required for SAP HANA multitenant database containers with high isolation level.
# NW_HDB_getDBInfo.tenantOsGroup = 

# A dedicated OS user for the tenant database, required for SAP HANA multitenant database containers with high isolation level.
# NW_HDB_getDBInfo.tenantOsUser = 

# SAP INTERNAL USE ONLY
# NW_adaptProfile.templateFiles = 

# Specify whether you want to set FQDN for the system.
# NW_getFQDN.setFQDN = true

# The load type chosen by the user. Valid values are: 'SAP', 'STD', 'OBR', 'HCP', 'MDA', 'HBR', 'SBR'
NW_getLoadType.loadType = SAP

# ABAP system is Unicode (true|false), only needed if it cannot be determined from the system.
# NW_getUnicode.isUnicode = 

# Enter the path of the existing 'profile' directory.
# NW_readProfileDir.profilesAvailable = true

# Specify whether a Landscape Reorg Check Procedures file 'HdbLandscapeReorgCheckProcedure.SQL' is to be used. Possible values are 'USEFILE', 'DONOTUSEFILE','DONOTRUN'. Default value is 'USEFILE'.
# hanadb.landscape.reorg.useCheckProcedureFile = USEFILE

# Specify whether a Table Placement Parameters file 'HdbTablePlacementParameters.SQL' is to be used. Possible values are 'USEFILE', 'DONOTUSEFILE'. Default value is 'USEFILE'.
hanadb.landscape.reorg.useParameterFile = DONOTUSEFILE

# DBACOCKPIT user is to be created. Default value is 'true'.
hdb.create.dbacockpit.user = true

# The password of the '<sapsid>adm' user
# nwUsers.sidadmPassword = 

# ABAP schema password
# storageBasedCopy.abapSchemaPassword = 
